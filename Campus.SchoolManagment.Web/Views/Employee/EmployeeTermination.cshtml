@model Campus.School.Management.Logic.BusinessLayer.ViewModel.EmployeeTerminationViewModel
@using Campus.School.Management.Logic.Resources

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Ajax.BeginForm("EmployeeTermination", "Employee", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccessEmployeeTermination" }, new { @class = "ui EmployeeTermination form" }))

{

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.Employee_ID)

<div class="two fields">
    <div class="field">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(model => model.HousingAllowance, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.HousingAllowance, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.HousingAllowance, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div  class="two fields">
    <div class="field">
        @Html.LabelFor(model => model.EndOfService, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.EndOfService, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.EndOfService, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(model => model.LastWorkingDate, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.LastWorkingDate, new { htmlAttributes = new { @class = "date-picker" ,@onkeypress="return false;"} })
            @Html.ValidationMessageFor(model => model.LastWorkingDate, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
<div  class="two fields">
    <div class="field">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="field">
        @Html.LabelFor(model => model.TelNo, htmlAttributes: new { @class = "" })
        <div class="ui input">
            @Html.EditorFor(model => model.TelNo, new { htmlAttributes = new { @class = "" } })
            @Html.ValidationMessageFor(model => model.TelNo, "", new { @class = "text-danger" })
        </div>
    </div>
</div>
    <div class="actions">
        <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
        <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>
    </div>
}
    <script>
        $(function () {

            $('.date-picker').datepicker({
                format: 'yyyy/mm/dd'

            });

            var empId = $("[name='empId']:checked").val();
            $("#Employee_ID").val(empId);

        })

        function OnSuccessEmployeeTermination(data) {

            if (data) {

                toastr.success("@GeneralResource.toastrSave")

                $('#EmployeeTermination-Model .close').click()

                var id = $("#Employee_ID").val();

                $('#list-Employee tr[data-id="' + id + '"] td.action')
                    .html('<div class="ui red small label">terminated </div>');



            } else {
                toastr.error("@GeneralResource.toastrOperationFaild")
            }
        };
    </script>
