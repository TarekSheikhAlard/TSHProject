@model Campus.School.Management.Logic.BusinessLayer.ViewModel.GradesSchoolViewModel

@using Campus.School.Management.Logic.Resources
@{
    ViewBag.Title = "_Create";
}

<h2>_Create</h2>
@using (Ajax.BeginForm("Create", "City", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" },new { @class="ui form"}))

{
    @Html.AntiForgeryToken()

    

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


       <div class="field">
            @Html.LabelFor(model => model.YearID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.YearID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.YearID, "", new { @class = "text-danger" })
            </div>


           <div class="field">
                @Html.LabelFor(model => model.GradeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GradeID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GradeID, "", new { @class = "text-danger" })
                </div>
                @*</div>
               <div class="field">*@
                @Html.LabelFor(model => model.GradeOrig, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GradeOrig, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GradeOrig, "", new { @class = "text-danger" })
                </div>
            </div>

           <div class="field">
                @Html.LabelFor(model => model.GradeSchoolNameA, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GradeSchoolNameA, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GradeSchoolNameA, "", new { @class = "text-danger" })
                </div>
            </div>



           <div class="field">

                @Html.LabelFor(model => model.GradeSchoolNameE, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GradeSchoolNameE, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GradeSchoolNameE, "", new { @class = "text-danger" })
                </div>


            </div>



            <div class="actions">
                <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
                <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

            </div>
        </div>
}







        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }




