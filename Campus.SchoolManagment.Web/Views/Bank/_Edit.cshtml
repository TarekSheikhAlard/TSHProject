@model Campus.School.Management.Logic.BusinessLayer.ViewModel.BankViewModel

@using Campus.School.Management.Logic.Resources

@using Campus.School.Management.Logic.BusinessLayer
@using Campus.School.Management.Logic.BusinessLayer.ViewModel;

@{
    SchoolUserViewModel _dbUser = Statistics.GetLogiccookie();
}



<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Ajax.BeginForm("Edit", "Bank", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui form" }))

{
    @Html.AntiForgeryToken()



    @Html.HiddenFor(model => model.BankID)
    @Html.HiddenFor(model => model.AccountTreeID)

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
            @Html.LabelFor(model => model.BankID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankID, "", new { @class = "text-danger" })
            </div>
        </div>*@
    if (_dbUser.isArabic)
    {

        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.BankNameAr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankNameAr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankNameAr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.BankNameEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankNameEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankNameEn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="field">
            @Html.LabelFor(model => model.BankNameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankNameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankNameEn, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    if (_dbUser.isArabic)
    {
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.BankAccountNameAr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankAccountNameAr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankAccountNameAr, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.BankAccountNameEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BankAccountNameEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BankAccountNameEn, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="field">
            @Html.LabelFor(model => model.BankAccountNameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BankAccountNameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BankAccountNameEn, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="field">
        @Html.LabelFor(model => model.AccountNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="three fields">
        <div class="field">
            @Html.LabelFor(model => model.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BranchName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.OpeningBalance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OpeningBalance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OpeningBalance, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="actions">
        <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Edit</button>
        <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

    </div>

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
