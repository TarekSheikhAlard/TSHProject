@model Campus.School.Management.Logic.BusinessLayer.ViewModel.StudentViewModel

@using Campus.School.Management.Logic.Resources

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>

 
<div class="form-group">
    @using (Html.BeginForm())
    {
        <div class="student_box_style col-lg-12  col-md-12 col-sm-6">

            @Html.LabelFor(model => model.Student_Img, htmlAttributes: new { @class = "control-label col-md-2 upload_label" })
            <div class="col-md-8  upload_label">
                <input id="uploadFile" disabled="disabled" style="width:300px;" />

                <label for="file_upload" class="btn btn-primary" style="border-radius:15px;width:100px;"><span class="glyphicon glyphicon-arrow-up"></span>  @GeneralResource.upload</label>
                <input id="file_upload" width="100" style="visibility:hidden;" type="file" name="file_upload" required>
                <p id="demo"></p>
            </div>
            <div class="col-md-2">
                <img id="display" src="#" alt="" style="height:100px; width:120px;" />

            </div>


        </div>

    }
    </div>


    @using (Ajax.BeginForm("Create", "Student", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" },new { @class="ui form"}))
    {
        @Html.AntiForgeryToken()

        @*@Html.HiddenFor(model => model.check)*@


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        
<div>
    <div class="student_box_style col-lg-12  col-md-12 col-sm-6">
        <div class="field">
            @Html.LabelFor(model => model.StudentAcdID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.StudentAcdID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.StudentAcdID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(model => model.YearID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.YearID, ViewBag.Year as SelectList, "--Select Year --", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.YearID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <hr />
    <div class="student_box_style col-lg-12  col-md-12 col-sm-6">

        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.GradeID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.GradeID, ViewBag.Grade as SelectList, "--Select Grade --", htmlAttributes: new { @class = "form-control"@*, @onchange = "GetClass(this.value);"*@})
                    @Html.ValidationMessageFor(model => model.GradeID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">

                @Html.LabelFor(model => model.NationalityID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.NationalityID, ViewBag.Nationality as SelectList, "--Select Nationality--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NationalityID, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="two fields">

            <div class="field">
                @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.Sex, new SelectList(new List<Object>
               {
               new { value = "Male" , text = "Male"  },
               new { value = "Female" , text = "Female"}}, "value", "text"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.IqamaNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IqamaNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IqamaNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.IqamaStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IqamaStartDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.IqamaStartDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.IqamaEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IqamaEndDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.IqamaEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.PassportStartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PassportStartDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.PassportStartDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.PassEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PassEndDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.PassEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Mail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.ParentJob, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ParentJob, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentJob, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="student_box_style col-lg-12  col-md-12 col-sm-6">

        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.ParentTell, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ParentTell, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentTell, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.ParentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ParentAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentAddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.Requirments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Requirments, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Requirments, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.LastEduShcool1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduShcool1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduShcool1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">

            <div class="field">
                @Html.LabelFor(model => model.LastEduShcool2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduShcool2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduShcool2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.LastEduCity1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduCity1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduCity1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.LastEduCity2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduCity2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduCity2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.LastEduDateFrom1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduDateFrom1, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.LastEduDateFrom1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.LastEduDateFrom2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduDateFrom2, new { htmlAttributes = new { @class = "form-control form-control-inline date-picker" } })
                    @Html.ValidationMessageFor(model => model.LastEduDateFrom2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.LastEduFull1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduFull1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduFull1, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.LastEduFull2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.LastEduFull2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastEduFull2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.PersonStm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PersonStm, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PersonStm, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">

            <div class="field">
                @Html.LabelFor(model => model.Refrences, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Refrences, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Refrences, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.Parentmobile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.Parentmobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Parentmobile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.ParentMail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ParentMail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentMail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="field">
                @Html.LabelFor(model => model.IqamaPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.IqamaPlace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IqamaPlace, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            @*<div class="form-group">
             @Html.LabelFor(model => model.IsArchives, htmlAttributes: new { @class = "control-label col-md-2" })
             <div class="col-md-4">

                 @Html.CheckBoxFor(model => model.IsArchives)
                 @Html.ValidationMessageFor(model => model.IsArchives, "", new { @class = "text-danger" })

             </div>
            </div>*@

            <div class="field">
                @Html.LabelFor(model => model.PrevSchool, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PrevSchool, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrevSchool, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.PrevSchAr, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.PrevSchAr, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrevSchAr, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="two fields">
            <div class="field">
                @Html.LabelFor(model => model.ParentEqmEndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.ParentEqmEndDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.ParentEqmEndDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="field">
                @Html.LabelFor(model => model.GraduateDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.EditorFor(model => model.GraduateDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                    @Html.ValidationMessageFor(model => model.GraduateDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
      
            @*<div class="form-group">
                @Html.LabelFor(model => model.ClassID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-4">
                    @Html.DropDownListFor(model => model.ClassID, new SelectList(""), "select", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ClassID, "", new { @class = "text-danger" })
                </div>
            </div>*@


        </div>

        <div class="actions">
            <button id="Save" type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
            <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

        </div>



    </div>

      
    }








    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script>

        function InitC() {

            $('.date-picker').datepicker({
                format: 'yyyy/mm/dd'
            });
        };
        InitC();


        //$("#YearID").change(function ()
        //{
        //    $('#ClassID').get(0).selectedIndex = 0;
     
        //});

        //$("#ClassID").change(function ()
        //{
        //    if ($("#YearID").val() == "")
        //    {
        //        $('#YearID').valid();
        //        $('#ClassID').get(0).selectedIndex = 0;
        //    }
  
        //});


     

    </script>



    <script>

                        document.getElementById("file_upload").onchange = function () {

                            document.getElementById("uploadFile").value = this.value;
                            document.getElementById("display").src = window.URL.createObjectURL(this.files[0]);

                        };

                        $("#Save").click(function (event) {
                            debugger;

                            var inpObj = $("#file_upload").get(0).files;
                            if (inpObj.length == 0) {
                                $("#demo").html("<p style='color:red'>@GeneralResource.ImageRequire</p>");
                                //toastr.error('please select image');
                                event.preventDefault();

                            }
                            else {
                                $("#demo").html("");
                                $(this).isDefaultPrevented();
                            }

                        });

    </script>


    <script>

                        $("#file_upload").change(function () {
                            $("#demo").html("");

                            var fileData = new FormData();

                            var img = $("#file_upload").get(0).files;


                            fileData.append("ImageFile", img[0]);
                            $.ajax({
                                type: "Post",
                                url: '/Student/AddImage/',
                                data: fileData,
                                contentType: false,
                                processData: false,
                                success: function (response) {


                                }
                            });


                        });


    </script>
