@model Campus.School.Management.Logic.BusinessLayer.ViewModel.StudentViewModel

@using Campus.School.Management.Logic.Resources

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
@{
    ViewBag.Title = "Index"; if (!Request.IsAjaxRequest()) { Layout = "~/Views/Shared/_Layout.cshtml"; }
}


<div class="ui masthead vertical segment primary">
    <div class="ui container">
        <div class="introduction">
            <h1 class="ui header normal ">
                <clr-icon shape="users" size="45"></clr-icon>
                @*<i class="feather big icon-book" ></i>*@
                <div id="heading" class="content">
                    Initial registration
                </div>
            </h1>
        </div>
    </div>
</div>

<div class="ui main container">
    <div class="ui segment">
        @using (Html.BeginForm())
        {
            <div class="ui form">

                <div class=" two fields">
                    <div class="field">
                        @Html.LabelFor(model => model.Student_Img, htmlAttributes: new { @class = "control-label col-md-2  " })
                        <div class="ui action input">
                            <input id="uploadFile" disabled="disabled" />

                            <label for="file_upload" class="ui primary button">  @GeneralResource.upload</label>
                        </div>
                    </div>
                    <div class="field">
                        <img id="display" class="ui tiny image" src="#" alt="" />
                    </div>

                </div>
                <input id="file_upload" style="visibility:hidden;display:none" type="file" name="file_upload" required>
            </div>

        }

        @using (Ajax.BeginForm("Create", "Student", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui form" }))
        {
            @Html.AntiForgeryToken()

            @*@Html.HiddenFor(model => model.check)*@


            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div>
                <div class="student_box_style col-lg-12  col-md-12 col-sm-6">
                    <div class="two fields">


                        <div class="field">
                            @Html.LabelFor(model => model.YearID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.YearID, ViewBag.Year as SelectList, "--Select Year --", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.YearID, "", new { @class = "text-danger" })
                            </div>
                        </div>  <div class="field">
                            @Html.LabelFor(model => model.GradeID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.GradeID, ViewBag.Grade as SelectList, "--Select Grade --", htmlAttributes: new
                                {
                                    @class = "form-control"@*, @onchange = "GetClass(this.value);"*@})
                                @Html.ValidationMessageFor(model => model.GradeID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="student_box_style col-lg-12  col-md-12 col-sm-6">

                    <div class="two fields">
                        <div class="field">
                            @Html.LabelFor(model => model.NameEn, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.NameEn, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NameEn, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(model => model.ArabicName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.ArabicName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ArabicName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="two fields">

                        <div class="field">
                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="three fields">
                        <div class="field">

                            @Html.LabelFor(model => model.NationalityID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.NationalityID, ViewBag.Nationality as SelectList, "--Select Nationality--", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.NationalityID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">

                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Sex, new SelectList(new List<Object>
                           {
                           new { value = "Male" , text = "Male"  },
                           new { value = "Female" , text = "Female"}}, "value", "text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="two fields">
                        <div class="field">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                </div>

                <div class="student_box_style col-lg-12  col-md-12 col-sm-6">

                    <div class="two fields">
                        <div class="field">
                            @Html.LabelFor(model => model.Requirments, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Requirments, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Requirments, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="field">
                            @Html.LabelFor(model => model.LastEduShcool1, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.LastEduShcool1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastEduShcool1, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>





                </div>

                <div class="actions">
                    <button id="Save" type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
                    <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

                </div>



            </div>


        }


    </div>

</div>






<script>

    function InitC() {

        $('.date-picker').datepicker({
            format: 'yyyy/mm/dd'
        });
    };
    InitC();


    //$("#YearID").change(function ()
    //{
    //    $('#ClassID').get(0).selectedIndex = 0;

    //});

    //$("#ClassID").change(function ()
    //{
    //    if ($("#YearID").val() == "")
    //    {
    //        $('#YearID').valid();
    //        $('#ClassID').get(0).selectedIndex = 0;
    //    }

    //});




</script>



<script>

                        document.getElementById("file_upload").onchange = function () {

                            document.getElementById("uploadFile").value = this.value;
                            document.getElementById("display").src = window.URL.createObjectURL(this.files[0]);

                        };

                        $("#Save").click(function (event) {
                            debugger;

                            var inpObj = $("#file_upload").get(0).files;
                            if (inpObj.length == 0) {
                                $("#demo").html("<p style='color:red'>@GeneralResource.ImageRequire</p>");
                                //toastr.error('please select image');
                                event.preventDefault();

                            }
                            else {
                                $("#demo").html("");
                                $(this).isDefaultPrevented();
                            }

                        });

</script>


<script>

    $("#file_upload").change(function () {
        $("#demo").html("");

        var fileData = new FormData();

        var img = $("#file_upload").get(0).files;


        fileData.append("ImageFile", img[0]);
        $.ajax({
            type: "Post",
            url: '/Student/AddImage/',
            data: fileData,
            contentType: false,
            processData: false,
            success: function (response) {


            }
        });


    });


</script>
