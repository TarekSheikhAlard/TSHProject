@model Campus.School.Management.Logic.BusinessLayer.ViewModel.AccStudentBusConfigViewModel
@using Campus.School.Management.Logic.BusinessLayer
@using System.Web.Mvc;
@using Campus.School.Management.Logic.Resources

@using (Ajax.BeginForm("BusConfiguration", "Student", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ConfigList", OnSuccess = "OnSuccessConfig()" }, new { @class = "ui small AddBusConfig form" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.Ref_Id)


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="two fields">
        <div class="field">
            <label>Select Bus</label>
            <div class="col-md-4">
                @Html.DropDownList("BusId", null, htmlAttributes: new { @class = "ui search selection dropdown", @onchange = "GetBusFees(this);" })
            </div>

        </div>
        <div class="field">
            <label>Select Trip</label>
            <div class="inline fields">
                <div class="field">
                    <div class="ui radio one trip checkbox ">
                        <input type="radio" name="trip" value="1">
                        <label>One Way</label>
                    </div>
                </div>
                <div class="field">
                    <div class="ui radio two trip checkbox">
                        <input type="radio" name="trip" value="2">
                        <label>Two Way</label>
                    </div>
                </div>
            </div>
        </div>


    </div>
    <div class=" three two fields">
        <div class="field">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(model => model.Tax, htmlAttributes: new { @class = "" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Tax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tax, "", new { @class = "" })
            </div>
        </div>

    </div>

    <div class="field">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "" })
        <div class="col-md-4">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "" })
        </div>
    </div>

    <div class="actions">
        <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
        <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>
    </div>

}