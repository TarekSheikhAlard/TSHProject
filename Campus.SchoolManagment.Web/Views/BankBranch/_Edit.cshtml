@model Campus.School.Management.Logic.BusinessLayer.ViewModel.BankBranchViewModel
@using Campus.School.Management.Logic.Resources


<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Ajax.BeginForm("Edit", "BankBranch", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui form" }))

{
    @Html.AntiForgeryToken()




    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.BranchNameEn, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchNameEn, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchNameEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.BranchNameAr, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchNameAr, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchNameAr, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.BankID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.BankID, ViewBag.Bank as SelectList, "select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="field">
            @Html.LabelFor(model => model.BranchAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchAddress, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">

        <div class="field">
            @Html.LabelFor(model => model.BranchPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.BranchMobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchMobile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchMobile, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">

        <div class="field">
            @Html.LabelFor(model => model.BranchFax, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.BranchFax, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BranchFax, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">

            @Html.LabelFor(model => model.AccountTreeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.AccountTreeID, ViewBag.Tree as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountTreeID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    
        <div class="actions">
            <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Edit</button>
            <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

        </div>

        }



        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
