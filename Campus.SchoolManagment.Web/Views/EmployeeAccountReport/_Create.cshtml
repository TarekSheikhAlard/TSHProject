@model Campus.School.Management.Logic.BusinessLayer.ViewModel.EmployeeAccountReportInputs
@using Campus.School.Management.Logic.Resources
@using Campus.School.Management.Logic.BusinessLayer.ViewModel

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Ajax.BeginForm("Create", "EmployeeAccountReport", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui employee account form" }))

{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.fromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="ui input">
                @Html.EditorFor(model => model.fromDate, new { htmlAttributes = new { @class = "date-picker form-control" } })
                @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.toDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="ui input">
                @Html.EditorFor(model => model.toDate, new { htmlAttributes = new { @class = "date-picker form-control" } })
                @Html.ValidationMessageFor(model => model.toDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class=" three fields">
        <div class="field">
            @Html.LabelFor(model => model.fromAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.fromAccount, ViewBag.Account as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fromAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.toAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.toAccount, ViewBag.Account as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.toAccount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="field">
            @Html.LabelFor(model => model.costCenter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.costCenter, ViewBag.CostCenter as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.costCenter, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>


    <div class="three fields">
        <div class="field">
            <label>  @EmployeeAccountReportInputs.entryTypes.unpostedEntry</label>
            <div class="col-md-10">
                <div class="">
                    @Html.RadioButtonFor(model => model.entryType, (int)EmployeeAccountReportInputs.entryTypes.unpostedEntry)
                    @Html.ValidationMessageFor(model => model.entryType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="field">

            <label>  @EmployeeAccountReportInputs.entryTypes.postedEntry</label>
            <div class="col-md-10">
                <div class="">
                    @Html.RadioButtonFor(model => model.entryType, (int)EmployeeAccountReportInputs.entryTypes.postedEntry)
                    @Html.ValidationMessageFor(model => model.entryType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="field">

            <label>  @EmployeeAccountReportInputs.entryTypes.allEntry</label>
          
            <div class="col-md-10">
                <div class="">
                    @Html.RadioButtonFor(model => model.entryType, (int)EmployeeAccountReportInputs.entryTypes.allEntry)
                    @Html.ValidationMessageFor(model => model.entryType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    <div class="actions">
        <button type="submit" class="ui primary button " name="cmd">@GeneralResource.Save</button>
        <button type="button" class="ui deny button" data-dismiss="modal">@GeneralResource.Close</button>
    </div>

}
<script>

    $(function () {
        InitC();

    })
    function InitC() {
        $('.date-picker').datepicker({
            autoclose: true,
            format: 'yyyy/mm/dd'
        });
    }
</script>
