@model Campus.School.Management.Logic.BusinessLayer.ViewModel.AccountFirstBalanceViewModel
@using Campus.School.Management.Logic.Resources

<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
@using (Ajax.BeginForm("Edit", "AccountFirstBalance", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" },new { @class="ui form"}))


{
    @Html.AntiForgeryToken()
    
    
        @Html.HiddenFor(model => model.PhysicalYearID)
    
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

       <div class="field">
            @Html.LabelFor(model => model.AccountTreeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.AccountTreeID, ViewBag.Tree as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AccountTreeID, "", new { @class = "text-danger" })
            </div>
            </div>

           <div class="field">
            @Html.LabelFor(model => model.ActionType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.ActionType, new SelectList(new List<Object>
                       {
                       new { value = "Debit" , text = "Debit"  },
                       new { value = "Credit" , text = "Credit"}}, "value", "text"), new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ActionType, "", new { @class = "text-danger" })
            </div>
        </div>
       <div class="field">
            @Html.LabelFor(model => model.CostCenterID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.CostCenterID, ViewBag.CostCenter as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CostCenterID, "", new { @class = "text-danger" })
            </div>
            </div>

           <div class="field">
            @Html.LabelFor(model => model.OperationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.OperationDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                @Html.ValidationMessageFor(model => model.OperationDate, "", new { @class = "text-danger" })
            </div>
        </div>

       <div class="field">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

       
        <div class="actions">
            <button type="submit" class="ui primary button " name="cmd"> @GeneralResource.Edit</button>
            <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

        </div>
   
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    function InitC() {

        $('.date-picker').datepicker({
            format: 'yyyy/mm/dd'
        });

    };
    InitC();

</script>