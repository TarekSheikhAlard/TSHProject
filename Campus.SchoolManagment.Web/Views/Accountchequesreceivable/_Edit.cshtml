@model Campus.School.Management.Logic.BusinessLayer.ViewModel.AccountchequesreceivableViewModel

@using Campus.School.Management.Logic.Resources
<script src="~/Content/Scripts/jquery.validate.min.js"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js"></script>
@{


    var htmlAttributecollect = new Dictionary<string, object>
{
{ "class" ,"form-control form-control-inline date-picker "},

};
    if (Model.isCollected == false)
    {
        htmlAttributecollect.Add("disabled", "disabled");

    }

}


@using (Ajax.BeginForm("Edit", "Accountchequesreceivable", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui form" }))

{
    @Html.AntiForgeryToken()



    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.InvoiceCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.InvoiceCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.InvoiceCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.docementNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.docementNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.docementNumber, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.costcenterID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.costcenterID, ViewBag.CostCenter as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.costcenterID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="field">
            @Html.LabelFor(model => model.BankBranchID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.BankBranchID, ViewBag.BranchList as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankBranchID, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.fromAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                <div class="ui accountSelect search fluid selection dropdown">
                    <div name="AccountNameEN1" class="text"></div>
                    @Html.HiddenFor(model => model.fromAccount)
                    <i class="dropdown icon"></i>
                </div>
                @Html.ValidationMessageFor(model => model.fromAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">

            @Html.LabelFor(model => model.AccountTreeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3" @*onclick="SearchAccount()"*@>
                <div class="ui accountSelect search fluid selection dropdown">
                    <div name="AccountNameEN" class="text"></div>
                    @Html.HiddenFor(model => model.AccountTreeID)
                    <i class="dropdown icon"></i>
                </div>
                @Html.ValidationMessageFor(model => model.AccountTreeID, "", new { @class = "text-danger" })
            </div>
            @*<div class="col-md-1">
               <input type="button" id="Search" value="....." onclick="SearchAccount()" class="ui primary button " />
            </div>*@
        </div>
    </div>

    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.operationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.operationDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker" } })
                @Html.ValidationMessageFor(model => model.operationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.collectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.collectionDate, new { htmlAttributes = new { @class = "form-control form-control-inline  date-picker1" } })
                @Html.ValidationMessageFor(model => model.collectionDate, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="field">

            @Html.LabelFor(model => model.BankCurrencyID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.BankCurrencyID, ViewBag.Currency as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankCurrencyID, "", new { @class = "text-danger" })
            </div>
        </div>*@
    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="field">

            @Html.LabelFor(model => model.Employee_ID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.Employee_ID, ViewBag.employee as SelectList, "Select", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Employee_ID, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.isCollected, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">

                @Html.CheckBoxFor(model => model.isCollected)
                @Html.ValidationMessageFor(model => model.isCollected, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="field">

            @Html.LabelFor(model => model.collectionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.collectionDate, new { htmlAttributes = htmlAttributecollect })
                @Html.ValidationMessageFor(model => model.collectionDate, "", new { @class = "text-danger" })
            </div>
        </div>
        </div>
        <div class="actions">
            <button type="submit" class="ui primary button " name="cmd"> @GeneralResource.Edit</button>
            <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>

        </div>


        }



        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
        <script>
               $(function () {
        InitC();
        semantic.accountQuickBox();
    })

            function InitC() {

                $('.date-picker').datepicker({
                    format: 'yyyy/mm/dd',
                    endDate: "today",
                    autoclose: true,
                    todayHighlight: true
                });

                $('.date-picker1').datepicker({
                    format: 'yyyy/mm/dd'
                });

            };
           

        </script>


        <script>

            $('#isCollected').click(function () {
                var $this = $(this);

                if ($this.is(':checked')) {
                    $('#collectionDate').removeAttr("disabled");
                }
                else {
                    $('#collectionDate').attr("disabled", "disabled");


                    $('#collectionDate').val("");


                }
            });

        </script>
