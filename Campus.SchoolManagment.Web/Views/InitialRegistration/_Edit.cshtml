@model Campus.School.Management.Logic.BusinessLayer.ViewModel.AdmInitialStudRegistrationViewModel


@using Campus.School.Management.Logic.Resources
<script src="~/Content/Scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/Content/Scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>


@using (Ajax.BeginForm("Edit", "InitialRegistration", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "div-record", OnSuccess = "$('.close').click()" }, new { @class = "ui form" }))
{
    @Html.AntiForgeryToken()


    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @Html.HiddenFor(model => model.id)


    <div class="two fields">
        <div class="field">
            @Html.LabelFor(model => model.FullNameEn, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.FullNameEn, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.FullNameEn, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.FullNameAr, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.FullNameAr, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.FullNameAr, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="four fields">

        <div class="field">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.DropDownListFor(model => model.Gender, new SelectList(new List<Object>
                   {
                   new { value = "Male" , text =GeneralResource.Male },
                   new { value = "Female" , text =GeneralResource.Female}}, "value", "text"), GeneralResource.Select, new { @class = "ui dropdown" })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="field">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "" })
            <div class="ui input">
                @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = " date-picker" } })
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="field">
            @Html.LabelFor(model => model.NationalityName, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.DropDownListFor(model => model.Nationality, ViewBag.NationalityList as SelectList, GeneralResource.Select, htmlAttributes: new { @class = "ui selection dropdown" })
                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>

    <div class="three fields">

        <div class="field">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="field">
            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="two fields">


        <div class="field">
            @Html.LabelFor(model => model.LastSchool, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.LastSchool, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.LastSchool, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="field">
            @Html.LabelFor(model => model.GradeName, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.DropDownListFor(model => model.GradeID, ViewBag.GradeIDList as SelectList, GeneralResource.Select, htmlAttributes: new { @class = "ui selection dropdown" })
                @Html.ValidationMessageFor(model => model.GradeID, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>

    <div class="actions">
        <button type="submit" class="ui primary button " name="cmd">@*<i class="fa fa-check"></i>*@&nbsp;@GeneralResource.Save</button>
        <button type="button" class="ui deny button" data-dismiss="modal">@*<i class="fa fa-times"></i>*@&nbsp;@GeneralResource.Close</button>
    </div>
}

<script>
    $(function () { InitC() })
    function InitC() {
        $('.ui.dropdown').dropdown();

        $('.date-picker').datepicker({
            format: 'yyyy/mm/dd'
        });

    };
</script>